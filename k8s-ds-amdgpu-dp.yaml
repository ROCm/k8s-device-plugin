apiVersion: v1
kind: ServiceAccount
metadata:
  name: radeon
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: radeon-role
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - radeon-role
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - watch
  - get
  - list
  - update
  resourceNames:
  - radeon-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: radeon-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: radeon-labeller-role
subjects:
- kind: ServiceAccount
  name: radeon-role
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: amdgpu-device-plugin-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: amdgpu-dp-ds
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: amdgpu-dp-ds
    spec:
      serviceAccount: radeon
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      containers:
      - image: rocm/k8s-device-plugin
        name: amdgpu-dp-cntr
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: dp
            mountPath: /var/lib/kubelet/device-plugins
          - name: sys
            mountPath: /sys
      volumes:
        - name: dp
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: sys
          hostPath:
            path: /sys
